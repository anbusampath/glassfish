/*
 * Copyright (c) 2022 Eclipse Foundation and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package org.glassfish.main.tests.tck.ant.xml;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.Unmarshaller;

import java.io.File;
import java.io.FileInputStream;

import javax.xml.XMLConstants;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;

import org.glassfish.main.tests.tck.ant.junit.generated.Testsuite;

/**
 * Parses the JUnit report generated by the TCK.
 *
 * @author David Matejcek
 */
public class JUnitResultsParser {

    /**
     * @param junitXmlReport - existing file with JUnit report of the TCK execution.
     * @return parsed {@link Testsuite} report.
     */
    public Testsuite parse(final File junitXmlReport) {
        try (FileInputStream inputStream = new FileInputStream(junitXmlReport)) {
            JAXBContext context = JAXBContext.newInstance(Testsuite.class);
            Unmarshaller unmarshaller = context.createUnmarshaller();

            SchemaFactory sf = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
            Schema schema = sf.newSchema(JUnitResultsParser.class.getResource("/junit-results.xsd"));
            unmarshaller.setSchema(schema);

            XMLInputFactory xif = XMLInputFactory.newFactory();
            XMLStreamReader xsr = new NamespaceURIFixer(xif.createXMLStreamReader(inputStream));
            Testsuite testSuite = (Testsuite) unmarshaller.unmarshal(xsr);
            return testSuite;
        } catch (Exception e) {
            throw new IllegalArgumentException("Could not process the JUnit report XML file: " + junitXmlReport, e);
        }
    }


    /**
     * JUnit reports generated by the TCK are missing namespace, so we add it here.
     */
    private static class NamespaceURIFixer extends StreamReaderDelegate {

        public NamespaceURIFixer(XMLStreamReader reader) {
            super(reader);
        }


        @Override
        public String getNamespaceURI() {
            String uri = super.getNamespaceURI();
            if (uri == null) {
                return "urn:org:junit:results";
            }
            return uri;
        }
    }
}
